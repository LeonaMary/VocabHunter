/*
 * Open Source Software published under the Apache Licence, Version 2.0.
 */
import org.apache.tools.ant.filters.*

apply plugin: 'application'

mainClassName = "VocabHunter"

applicationName = "VocabHunter"

ext.buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss')

processResources {
    filesMatching('properties/*.properties') {
        filter ReplaceTokens, tokens: [
            'build.version': project.property("version"),
            'build.timestamp': project.buildTimestamp
        ]
    }
}

jar {
    from(buildDir) {
        include 'build-info.properties'
    }
}

startScripts {
    doLast {
        unixScript.text = unixScript.text
                .replaceAll('(?m)^APP_HOME=', 'export APP_HOME=')
        windowsScript.text = windowsScript.text
                .replaceAll(/(set CLASSPATH=%APP_HOME%\\lib\\).*/, { "${it[1]}*" })
    }
}

dependencies {
    compile project(':core')
    compile 'com.gluonhq:ignite-guice:1.0.2'

    // This is required for the conditional logic in the logback setup
    runtime 'org.codehaus.janino:janino:3.0.10'

    testCompile project(path: ':core', configuration: 'tests')

    testCompile 'org.testfx:testfx-core:4.0.15-alpha'
    if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
        compile 'org.controlsfx:controlsfx:8.40.14'
        compile 'de.jensd:fontawesomefx-fontawesome:4.7.0-5'

        testRuntime 'org.testfx:openjfx-monocle:8u76-b04'
    } else {
        compile 'org.controlsfx:controlsfx:9.0.0'
        compile 'de.jensd:fontawesomefx-fontawesome:4.7.0-9.1.2'

        testRuntime 'org.testfx:openjfx-monocle:jdk-9+181'
    }
}

test {
    if (project.hasProperty("skipGuiTests")) {
        exclude 'io/github/vocabhunter/gui/main/GuiTest*'
    }
    if (!project.hasProperty("noHeadless")) {
        jvmArgs "-Dheadless=true"
    }
}
